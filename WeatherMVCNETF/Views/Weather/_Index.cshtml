
@{
    ViewBag.Title = "Weather";
}
<style>
    .city {
        display: flex;
        flex-direction: column;
        align-items: center;
        max-width: 400px;
        padding: 0px 20px 20px 20px;
        margin: 0px 0px 50px 0px;
        border: 1px solid;
        border-radius: 5px;
        box-shadow: 2px 2px #888888;
    }

        .city h1 {
            line-height: 1.2
        }

        .city span {
            padding-left: 20px
        }

        .city .row {
            padding-top: 20px
        }
                     
    .invisible {
        visibility: hidden;
    }

</style>

<h2>Weather</h2>
<div class="city">
    <div>
        <h1 id="cityname"></h1>
        <div class="row">
            <table>
                <tr>
                    <td>
                        <img id="icon" src="" alt="Content folder" class="img-thumbnail">
                    </td>
                    <td>
                        <b><span id="weathermain"></span></b>
                    </td>
                </tr>
                <tr>
                    <td>
                        <b><span id="temperatureval"></span></b>
                        <b><span style="display:inline" aria-label="°Celsius" aria-disabled="true">°C</span></b>
                    </td>
                    <td>                        
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="invisible"> 
        <span id="errorval"></span>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        <div class="form-group">
            <label for="countries"><span class="glyphicon glyphicon-hand-up"></span>Country</label>
            <select class="selectpicker" id="countries" data-show-subtext="true" data-live-search="true" data-none-selected-text="Select" data-width="fit">
                <option data-tokens="select">Select</option>
            </select>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        <div class="form-group">
            <label for="cities"><span class="glyphicon glyphicon-hand-up"></span>City</label>
            <select class="selectpicker" id="cities" data-show-subtext="true" data-live-search="true" data-none-selected-text="Select" data-width="fit">
                <option data-tokens="select">Select</option>
            </select>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        <div class="form-group">
            <button type="button" id="btncurweather" class="btn btn-primary">Текущая погода</button>
        </div>
    </div>
</div>


<script>
    $(function () {

        $('select').selectpicker();
        $(".dropdown").css("min-width", "200px");
        GetCountries();       
    });


    $('#countries').on('change', function (e) {
        
        if (this.selectedIndex != 0) {
                        GetCities(this.options[this.selectedIndex].value);
          }
    });


    $('#cities').on('change', function (e) {
        
        if (this.selectedIndex != 0) {
            $("#cityname").html(this.options[this.selectedIndex].text);                      
          }
    });


     $("#btncurweather").on("click", function (e) {
                e.preventDefault();
         const elem = $('#cities'); 
         if (elem[0].selectedIndex != 0) {
           //  const city = elem.val();
             const city = elem[0].options[elem[0].selectedIndex].text;
             GetCurrentWeather(city);
         }
         else
             alert("Select City")
     });

    function GetCountries() {

        const elem = $('#countries');
        $.get("api/Countries", function (data) {

               data.forEach(function (item) {
                    var option = $('<option/>');
                    option.val(item.Code);
                    option.text(item.Name);
                    elem.append(option);
               });
                
                elem.selectpicker('refresh');
        });
    }

    function GetCities(country) {
            //alert(country);
        const elem = $('#cities');
        $.get("api/Cities", { code: country },  function (data) {

               data.forEach(function (item) {
                    var option = $('<option/>');
                    option.val(item.Id);
                    option.text(item.Name);
                    elem.append(option);
               });
                
                elem.selectpicker('refresh');
        });
    }


    function GetCurrentWeather(city) {
           // alert(city);
       
        $.get("api/Weathers", { city: city }, function (data) {
            
            var weather = new WeatherView(data);
            $("#temperatureval").html(weather.temp);                      
            //const pathtoimg = "../Content/Images/" + "01d@2x.png";
            const pathtoimg = "../Content/Images/" + weather.weather[0].icon + String.fromCharCode(64) + "2x.png";            
            $("#icon").attr("src", pathtoimg);  
            debugger
            $("#weathermain").html(weather.weather[0].main);      

        });
    }

// Constructor function for Weather objects
    function WeatherView(data) {
  this.temp = data.temp;
  this.speed = data.speed;
  this.weather = data.weather;
}
</script>
